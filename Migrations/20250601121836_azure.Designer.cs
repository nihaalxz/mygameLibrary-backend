// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using apiWebpractice.VideoGameDBContext;

#nullable disable

namespace apiWebpractice.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250601121836_azure")]
    partial class azure
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("apiWebpractice.Models.VideoGame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Genre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReleaseYear")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("videoGames");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Genre = "Action-adventure",
                            Name = "The Legend of Zelda: Breath of the Wild",
                            ReleaseYear = 2017
                        },
                        new
                        {
                            Id = 2,
                            Genre = "Action role-playing",
                            Name = "The Witcher 3: Wild Hunt",
                            ReleaseYear = 2015
                        },
                        new
                        {
                            Id = 3,
                            Genre = "Action role-playing",
                            Name = "Dark Souls III",
                            ReleaseYear = 2016
                        },
                        new
                        {
                            Id = 4,
                            Genre = "Action-adventure",
                            Name = "God of War",
                            ReleaseYear = 2018
                        },
                        new
                        {
                            Id = 5,
                            Genre = "Action-adventure",
                            Name = "Red Dead Redemption 2",
                            ReleaseYear = 2018
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
